/* DocIntel
 * Copyright (C) 2018-2023 Belgian Defense, Antoine Cailliau
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Text.Json.Nodes;
using DocIntel.Core.Helpers;

namespace DocIntel.Core.Models
{
    public class DocumentFile
    {
        public DocumentFile()
        {
            FileId = Guid.NewGuid();
        }

        [Key] public Guid FileId { get; set; }

        public Guid DocumentId { get; set; }
        public Document Document { get; set; }
        public Document DocumentThumbnail { get; set; }
        public string Filename { get; set; }
        
        [Required]
        public string Title { get; set; }

        public string MimeType { get; set; }

        [Display(Name = "Document Date")]
        [DataType(DataType.Date)]
        public DateTime DocumentDate { get; set; }

        [Display(Name = "Registration Date")]
        [DataType(DataType.Date)]
        public DateTime RegistrationDate { get; set; }

        [Display(Name = "Modification Date")]
        [DataType(DataType.Date)]
        public DateTime ModificationDate { get; set; }

        public AppUser RegisteredBy { get; set; }
        public string RegisteredById { get; set; }
        public AppUser LastModifiedBy { get; set; }
        public string LastModifiedById { get; set; }

        [Url]
        [Display(Name = "Source URL")] 
        public string SourceUrl { get; set; }

        [Display(Name = "Override Classification?")]
        public bool OverrideClassification { get; set; } = false;
        public Classification Classification { get; set; }
        public Guid? ClassificationId { get; set; }

        [Display(Name = "Override Releasable To?")]
        public bool OverrideReleasableTo { get; set; } = false;
        [Display(Name = "Releasable To")]
        public ICollection<Group> ReleasableTo { get; set; }
        
        [Display(Name = "Override Eyes Only?")]
        public bool OverrideEyesOnly { get; set; } = false;
        [Display(Name = "Eyes Only")]
        public ICollection<Group> EyesOnly { get; set; }

        public string Filepath { get; set; }

        public string Sha256Hash { get; set; }

        [Column(TypeName = "jsonb")] public Dictionary<string, JsonObject> MetaData { get; set; }

        [HelpText("Visible files are listed on the details page of the document.")]
        public bool Visible { get; set; }
        
        [HelpText("Preview show the file content in the details page     of the document.")]
        public bool Preview { get; set; }

        public bool AutoGenerated { get; set; } = false;
    }
}