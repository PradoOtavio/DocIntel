<?xml version="1.0" encoding="UTF-8" ?>

<schema name="default-config" version="1.6">

    <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false" />
    <!-- docValues are enabled by default for long type so we don't need to index the version field  -->
    <field name="_version_" type="plong" indexed="false" stored="false"/>

    <!-- If you don't use child/nested documents, then you should remove the next two fields:  -->
    <!-- for nested documents (minimal; points to root document) -->
    <field name="_root_" type="string" indexed="true" stored="false" docValues="false" />
    <!-- for nested documents (relationship tracking) -->
    <field name="_nest_path_" type="_nest_path_" /><fieldType name="_nest_path_" class="solr.NestPathField" />

    <field name="reference" type="string" indexed="true" stored="true" multiValued="false" />
    <field name="external_reference" type="string" indexed="true" stored="true" multiValued="false" />
    
    <field name="title" type="text_en" indexed="true" stored="true" multiValued="false" />
    <field name="description" type="text_en" indexed="true" stored="true" multiValued="false" />
    
    <field name="source_id" type="string" indexed="true" stored="true" multiValued="false" />
    <field name="source_reliability" type="pint" indexed="true" stored="true" multiValued="false" />
    <field name="source_url" type="string" indexed="true" stored="true" multiValued="false" />
    
    <field name="classification" type="string" indexed="true" stored="true" multiValued="false" />
    <field name="eyes_only" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="releasable_to" type="string" indexed="true" stored="true" multiValued="true" />
    
    <field name="note" type="text_en" indexed="true" stored="true" multiValued="false" />
    
    <field name="registration_date" type="pdate" indexed="true" stored="false" multiValued="false" />
    <field name="modification_date" type="pdate" indexed="true" stored="false" multiValued="false" />
    <field name="document_date" type="pdate" indexed="true" stored="false" multiValued="false" />
    
    <field name="registered_by_id" type="string" indexed="true" stored="false" multiValued="false" />
    <field name="modified_by_id" type="string" indexed="true" stored="false" multiValued="false" />
    
    <field name="status" type="string" indexed="true" stored="false" multiValued="false" />
    <field name="url" type="string" indexed="true" stored="false" multiValued="false" />
    
    <field name="tags" type="string" indexed="true" stored="true" multiValued="true" />
    <field name="tags_id" type="descendent_path" multiValued="true" indexed="true" stored="true" />
    
    <field name="comments" type="text_en" indexed="true" stored="true" multiValued="true" />
    <field name="contents" type="text_en" indexed="true" stored="true" multiValued="true" />
    <field name="observables" type="text_en" indexed="true" stored="true" multiValued="true" />

    <field name="stripped_contents" type="text_en" indexed="true" stored="true" multiValued="true" />
    
    <!-- Field to use to determine and enforce document uniqueness.
      Unless this field is marked with required="false", it will be a required field
    -->
    <uniqueKey>id</uniqueKey>

    <!-- copyField commands copy one field to another at the time a document
       is added to the index.  It's used either to index the same field differently,
       or to add multiple fields to the same field for easier/faster searching.
    -->
    <field name="title_order" type="string" indexed="true" stored="false" multiValued="false" />
	  <copyField source="title" dest="title_order" maxChars="1024" />
    
    <!-- field type definitions. The "name" attribute is
       just a label to be used by field definitions.  The "class"
       attribute and any other attributes determine the real
       behavior of the fieldType.
         Class names starting with "solr" refer to java classes in a
       standard package such as org.apache.solr.analysis
    -->

    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" docValues="true" />
    <fieldType name="strings" class="solr.StrField" sortMissingLast="true" multiValued="true" docValues="true" />

    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
    <fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"/>

    <!--
      Numeric field types that index values using KD-trees.
      Point fields don't support FieldCache, so they must have docValues="true" if needed for sorting, faceting, functions, etc.
    -->
    <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
    <fieldType name="pfloat" class="solr.FloatPointField" docValues="true"/>
    <fieldType name="plong" class="solr.LongPointField" docValues="true"/>
    <fieldType name="pdouble" class="solr.DoublePointField" docValues="true"/>

    <fieldType name="pints" class="solr.IntPointField" docValues="true" multiValued="true"/>
    <fieldType name="pfloats" class="solr.FloatPointField" docValues="true" multiValued="true"/>
    <fieldType name="plongs" class="solr.LongPointField" docValues="true" multiValued="true"/>
    <fieldType name="pdoubles" class="solr.DoublePointField" docValues="true" multiValued="true"/>
    <fieldType name="random" class="solr.RandomSortField" indexed="true"/>

	<fieldType name="descendent_path" class="solr.TextField">
		<analyzer type="index">
		  <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
		</analyzer>
		<analyzer type="query">
		  <tokenizer class="solr.KeywordTokenizerFactory"/>
		</analyzer>
	  </fieldType>


    <!-- since fields of this type are by default not stored or indexed,
       any data added to them will be ignored outright.  -->
    <fieldType name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime    
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day
                      
      -->
    <!-- KD-tree versions of date fields -->
    <fieldType name="pdate" class="solr.DatePointField" docValues="true"/>
    <fieldType name="pdates" class="solr.DatePointField" docValues="true" multiValued="true"/>
    
    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
    <fieldType name="binary" class="solr.BinaryField"/>
    
    <!-- 
    RankFields can be used to store scoring factors to improve document ranking. They should be used
    in combination with RankQParserPlugin.
    (experimental)
    --> 
    <fieldType name="rank" class="solr.RankField"/>

    <!-- solr.TextField allows the specification of custom text analyzers
         specified as a tokenizer and a list of token filters. Different
         analyzers may be specified for indexing and querying.

         The optional positionIncrementGap puts space between multiple fields of
         this type on the same document, with the purpose of preventing false phrase
         matching across fields.

         For more info on customizing your analyzer chain, please see
         http://lucene.apache.org/solr/guide/understanding-analyzers-tokenizers-and-filters.html#understanding-analyzers-tokenizers-and-filters
     -->

    <!-- One can also specify an existing Analyzer class that has a
         default constructor via the class attribute on the analyzer element.
         Example:
    <fieldType name="text_greek" class="solr.TextField">
      <analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/>
    </fieldType>
    -->

    <!-- A text field with defaults appropriate for English: it tokenizes with StandardTokenizer,
         removes English stop words (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
         finally applies Porter's stemming.  The query time analyzer also applies synonyms from synonyms.txt. -->
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.FlattenGraphFilterFactory"/>
        -->
        <!-- Case insensitive stop word removal.
        -->
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="lang/stopwords_en.txt"
            />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPossessiveFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
	      -->
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="lang/stopwords_en.txt"
        />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPossessiveFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
	      -->
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>
    
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100" multiValued="true">
		<analyzer type="index">
		  <tokenizer class="solr.StandardTokenizerFactory"/>
		  <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true"/>
		  <filter class="solr.LowerCaseFilterFactory"/>
		</analyzer>
		<analyzer type="query">
		  <tokenizer class="solr.StandardTokenizerFactory"/>
		  <filter class="solr.StopFilterFactory" words="stopwords.txt" ignoreCase="true"/>
		  <filter class="solr.SynonymGraphFilterFactory" expand="true" ignoreCase="true" synonyms="synonyms.txt"/>
		  <filter class="solr.LowerCaseFilterFactory"/>
		</analyzer>
	  </fieldType>

</schema>
