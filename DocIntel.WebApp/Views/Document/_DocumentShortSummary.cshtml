@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Document

<div>
    <div class="row">
        <div class="col-12 text-truncate">
        @if (!string.IsNullOrEmpty(Model.Classification.Abbreviation))
        {
            <span class="badge @Model.Classification.Color mr-1">
                @Model.Classification.Abbreviation
            </span>
        }
        <a class="fw-500" asp-action="Details" asp-controller="Document" asp-route-url="@Model.DocumentId">
            @Html.DisplayFor(modelItem => Model.Title)
        </a>
        </div>
    </div>
    <div class="row">
        <div class="col-12 mt-1">
            <p class="mb-1">
                @if (Model.Source != null)
                {
                    <span class="mr-1">
                        by <a asp-controller="Source" asp-action="Details" asp-route-url="@Model.Source.SourceId">@Model.Source.Title</a>
                    </span>
                    <span class="mr-1">-</span>
                }
                Registered @Html.Timeago(Model.RegistrationDate)
            </p>
        </div>
    </div>
@*
    <div class="row">
        <div class="col-12">
            @if (Model.DocumentTags.Any())
            {
                <p class="mt-0 mb-0">
                    @foreach (var tag in Model.DocumentTags.Where(_ => !_.Tag.Facet.Hidden).OrderBy(t => t.Tag.Label))
                    {
                        <a class="badge badge-pill @tag.Tag.BackgroundColor"
                           asp-controller="Tag"
                           asp-action="Details"
                           asp-route-label="@tag.Tag.TagId">
                            @tag.Tag.FriendlyName
                        </a>
                    }
                </p>
            }
        </div>
    </div>
    *@
</div>