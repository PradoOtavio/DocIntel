@using System.ComponentModel.DataAnnotations
@using System.Reflection
@using System.Text
@using DocIntel.Core.Authorization.Operations
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Newtonsoft.Json
@model DocIntel.WebApp.ViewModels.SearchViewModel.SearchIndexViewModel

@{
    if (string.IsNullOrEmpty(Model.SearchTerm))
    {
        ViewData["Title"] = "All documents";
    }
    else
    {
        ViewData["Title"] = "Searching for '" + Model.SearchTerm + "'";
    }
    ViewData["Category1"] = "Documents";
    ViewData["SearchTerms"] = Model.SearchTerm;
    
    
    var canSaveSearch = (await AuthorizationService.AuthorizeAsync(User, null, SavedSearchOperations.Add)).Succeeded;
}

<form asp-action="Search" asp-controller="Search" id="search-documents" method="GET" class="autosubmit-form">
    <input type="hidden" id="selected-filters" value="@(Convert.ToBase64String(Encoding.UTF8.GetBytes(JsonConvert.SerializeObject(Model.Filters))))" />
    <div class="row">
        <div class="col-xl-9">
            <div class="input-group input-group-lg mb-2">
                <input type="text" class="form-control" id="filter-icon"
                       aria-label="type 2 or more letters" placeholder="Search for anything..." value="@Model.SearchTerm" name="SearchTerm"/>
                <div class="input-group-append">
                    <button class="btn btn-pills btn-primary hidden-sm-down waves-effect waves-themed" type="submit">
                        <i class="fal fa-search mr-lg-2"></i><span class="hidden-md-down">Search</span>
                    </button>
                </div>
            </div>

            <div class="d-flex align-item-center">
                <div class="py-1 mr-2 text-nowrap mb-2">
                    <a asp-action="Help" asp-controller="Search">Help</a>
                    @if (canSaveSearch) {
                        <span class="text-muted mx-1">|</span>
                        <div class="d-inline-block">
                            <div class="dropdown">
                                <a href="#" class="px-1" data-toggle="dropdown">
                                    <i class="fal fa-xs fa-search"></i>
                                </a>
                                <div class="dropdown-menu">
                                    @if (canSaveSearch)
                                    {
                                    <a class="dropdown-item py-1 px-3" id="save-default-search" data-form-action="@Url.Action("SaveAsDefault")">Save as default search</a>   
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    <span class="text-muted mx-1">|</span>
                    <div class="d-inline-block">
                        <div class="dropdown">
                            <a href="#" class="px-1" data-toggle="dropdown">
                                <i class="fal fa-xs fa-filter"></i>
                            </a>
                            <div class="dropdown-menu">
                                <a class="dropdown-item py-1 px-3" id="clear-all-filters">Clear all filters</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="search-filters" class="flex-grow-1">
                    <em class="text-muted d-inline-block py-1 mr-2 mb-2" style="margin-top: 1px; margin-bottom: 1px">No filters selected</em>
                </div>
            </div>

            @await Html.PartialAsync("_SearchDocumentList", Model, new ViewDataDictionary(ViewData))
        </div>
        <div class="col-xl-3">

            @if (Model.Classifications.Any() | Model.Registrants.Any() | Model.Sources.Any() | Model.Reliabilities.Any())
            {
                <div id="panel-metadata" class="panel">
                    <div class="panel-container show">
                        <div class="panel-content p-0">
                            <div class="accordion" id="accordion_meta">
                                @if (Model.Classifications.Any())
                                {
                                    @await Html.PartialAsync("_ClassificationCard", Model, new ViewDataDictionary(ViewData))
                                }
                                @if (Model.Registrants.Any())
                                {
                                    @await Html.PartialAsync("_RegistrantCard", Model, new ViewDataDictionary(ViewData))
                                }
                                @if (Model.Sources.Any())
                                {
                                    @await Html.PartialAsync("_SourceCard", Model, new ViewDataDictionary(ViewData))
                                }
                                @if (Model.Reliabilities.Any())
                                {
                                    @await Html.PartialAsync("_ReliabilitiesCard", Model, new ViewDataDictionary(ViewData))
                                }
                            </div>
                            @* <div class="accordion" id="accordion_factualscore">
                                @await Html.PartialAsync("_FactualScoreCard", Model, new ViewDataDictionary(this.ViewData))
                            </div> *@
                        </div>
                    </div>
                </div>
            }

            @if (Model.Tags.Any())
            {
                <div id="panel-tags" class="panel">
                    <div class="panel-container show">
                        <div class="panel-content p-0">
                            <div class="accordion" id="accordion_tags">

                                @await Html.PartialAsync("_TagCards", Model, new ViewDataDictionary(ViewData))

                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</form>